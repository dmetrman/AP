"""empty message

Revision ID: eef9450179fc
Revises: cc9faeb50f8e
Create Date: 2021-12-07 01:57:02.042529

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'eef9450179fc'
down_revision = 'cc9faeb50f8e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('car',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('brand', sa.String(), nullable=True),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('surname', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('order',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('car_id', sa.Integer(), nullable=True),
    sa.Column('beginningDate', sa.DateTime(), nullable=True),
    sa.Column('amountOfDays', sa.Integer(), nullable=True),
    sa.Column('complete', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['car_id'], ['car.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.drop_table('Order')
    op.drop_table('User')
    op.drop_table('Car')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Car',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Car_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('brand', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('model', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status1', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Car_pkey'),
    sa.UniqueConstraint('id', name='Car_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('User',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"User_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('surname', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='User_pkey'),
    sa.UniqueConstraint('id', name='User_id_key'),
    sa.UniqueConstraint('username', name='User_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Order',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Order_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('car_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('beginningDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('amountOfDays', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('complete', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['car_id'], ['Car.id'], name='Order_car_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], name='Order_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Order_pkey'),
    sa.UniqueConstraint('id', name='Order_id_key')
    )
    op.drop_table('order')
    op.drop_table('user')
    op.drop_table('car')
    # ### end Alembic commands ###
